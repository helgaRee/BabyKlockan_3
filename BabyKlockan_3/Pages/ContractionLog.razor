@using BabyKlockan_3.Models
@using BabyKlockan_3.Services
@inject ContractionService contractionService


@*     Komponenten ska:
        visa en lista över alla värkar (starttid, stoptid, duration)
        få datan från ContractionService
        uppdateras när en ny värk loggas *@

<h3>Loggade värkar</h3>

@if(contractionService.contractionList.Count == 0)
{
    <p>Inga värkar loggade ännu</p>
} else
{
    <div class="dataPresentation">
        <table class="table">
            <thead>
                <tr>
                    <th>Värk</th>
                    <th>Längd</th>
                    <th>Vila</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < contractionService.contractionList.Count; i++)
                {
                    var current = contractionService.contractionList[i];
                    var previous = i > 0 ? contractionService.contractionList[i - 1] : null;
                    var rest = previous != null ? current.StartTime - previous.EndTime : (TimeSpan?)null;

                    @* var tidMellan = previous != null ? (current.Start - previous.End) : TimeSpan.Zero; *@

                    <tr>
                        <td>@(i + 1)</td> @*Numrering*@
                        <td>Längd: @current.Duration.TotalSeconds:F1</td> @*Längden på värk*@
                        <td class="data-rest">
                            @(rest == null
                                ? "-"
                                : $"{(int)rest.Value.TotalMinutes}:{rest.Value.Seconds:D2}")
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {

}
